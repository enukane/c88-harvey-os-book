= はじめに

本書では表題にもある Harvey OS とその使い方を紹介します.

Harvey OS は, plan19front や 9legacy と同様に本家の Plan 9 from Bell Labs 本家から fork して現在絶賛開発進行中のプロジェクトです.
このプロジェクトが興味深いのは, それがより最近に fork したということに加え "ビルド" から手を入れているという点です.
他のfork プロジェクトたちが, 欲しいアプリケーションやドライバをバリバリと追加してモダンなモノにしていく, あるいは Intel Atom やら Raspberry Pi といった新しいプラットフォーム対応を進めていくといったアプローチを取っている方向からは一歩引いたものになっています.


いわゆる Plan 9 C Compiler (x86系だと 8c や 9c) を捨てて gcc でビルドできるようにしたこと, それだけでもすごい成果です.
しかしこのプロジェクトの一番の利点は, ビルド環境を Plan 9 からひっぺがしたことにあります.
この結果, Plan 9 (正しくは Plan 9 相当の環境)向けの開発・試行が行いやすくなりました.
Harvey OS が導入したビルドシステムにより Plan 9 環境のクロスビルドが可能となり, LinuxやOS Xで開発をし
VMM上ですぐに実行できるという形態を取れるようになりました.
この様にすぐ作って試すサイクルが非常に速く手軽にできることとともに, VMMでの動作が前提としていたりそのために生成するイメージが簡易であるという別の利点もあります. 常用の環境としては非常に使いづらいだけですが, 何らかのコンポーネントの一つとして展開できることを見据えている, と言えなくもありません. その意味では3つボタンマウスがどうこうとか Acme がどうこう, と手元で試す段階からは飛躍して別の方向へ向かうことができているのかもしれません.

本書では, ひとまず Harvey OS を使って遊べるようになるというところまでを以下の様に説明していきます.
第一章ではざっくりと Harvey OS の概要についてお話します.
第二章では実際に Harvey OS の Mac OS X 上での動作環境作りと動かすところまで, 第三章では第二章で用いたビルドシステムについて簡単に解説をします.
第四章ではそれまでに述べたビルドシステムの活用事例として, Harvey OS にいろいろとコンポーネントを足す方法について解説します.
一連の説明を通して, 既存の Harvey OS にいろいろ継ぎ足して自分の使いたい機能を実現するための手段について把握して頂けたら幸いです.
